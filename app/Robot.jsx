/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/robot.glb -o app/Robot.jsx 
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { MeshNormalMaterial } from "three";
import { useAnimationContext } from "./AnimationContext";

const normalMaterial = new MeshNormalMaterial();
export const Robot = (props) => {
  const group = useRef();
  const { nodes, animations } = useGLTF("/robot.glb");
  const { actions, names } = useAnimations(animations, group);
  const { animationName } = useAnimationContext();

  useEffect(() => {
    actions[animationName]?.reset().fadeIn(0.5).play();
    return () => {
      actions[animationName]?.fadeOut(0.5);
    };
  }, [actions, names, animationName]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" scale={0.809}>
          <primitive object={nodes.DEF_Torso001} />
          <skinnedMesh
            name="Arm-Left"
            geometry={nodes["Arm-Left"].geometry}
            material={normalMaterial}
            skeleton={nodes["Arm-Left"].skeleton}
          />
          <skinnedMesh
            name="Arm-Right"
            geometry={nodes["Arm-Right"].geometry}
            material={normalMaterial}
            skeleton={nodes["Arm-Right"].skeleton}
          />
          <skinnedMesh
            name="Eye-Left"
            geometry={nodes["Eye-Left"].geometry}
            material={normalMaterial}
            skeleton={nodes["Eye-Left"].skeleton}
          />
          <skinnedMesh
            name="Eye-Right"
            geometry={nodes["Eye-Right"].geometry}
            material={normalMaterial}
            skeleton={nodes["Eye-Right"].skeleton}
          />
          <skinnedMesh
            name="Head"
            geometry={nodes.Head.geometry}
            material={normalMaterial}
            skeleton={nodes.Head.skeleton}
          />
          <skinnedMesh
            name="Torso"
            geometry={nodes.Torso.geometry}
            material={normalMaterial}
            skeleton={nodes.Torso.skeleton}
          />
        </group>
      </group>
    </group>
  );
};

useGLTF.preload("/robot.glb");
